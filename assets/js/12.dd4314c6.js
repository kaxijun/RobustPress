(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{283:function(e,s,t){"use strict";t.r(s);var a=t(38),c=Object(a.a)({},function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"elasticsearch介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch介绍","aria-hidden":"true"}},[e._v("#")]),e._v(" ElasticSearch介绍")]),e._v(" "),t("p",[t("strong",[e._v("ElasticSearch")]),e._v("是一个基于Lucene库的搜索引擎，它提供了一个分布式多租户能力的全文搜索引擎，同时提供了HTTP Web接口和无模式JSON文档。ElasticSearch是使用JAVA语言开发的，客户端在主流的Java、.NET（C#）、PHP、Python、Apache Groovy、Ruby等其他许多语言中都是可以使用的。")]),e._v(" "),t("p",[t("strong",[e._v("ES 的搜索引擎严重依赖于底层的")]),e._v(" "),t("strong",[e._v("Filesystem Cache。如果Filesystem Cache可以分配到更多的内存，让内存足够去存放IDX Segment File 索引数据文件，那么数据基本就都是在内存中存放，所有的搜索都是直接在内存中查询，速度是非常快的。如果Filesystem Cache没有分配到足够的内存，数据不足以全部存放在内存中，剩下的数据就会去硬盘中读取，受限于硬盘的读写速度，那么性能便会大打折扣。")])]),e._v(" "),t("p",[e._v("ElasticSearch是一个"),t("strong",[e._v("近实时搜索引擎")]),e._v("，为什么说是近实时？首先，我们需要知道一个索引(index)，是由多个段(segment)组成的，新增的document会优先写入到indexing buffer区中，然后被重写成一个segment，之后再被写入到Filesystem Cache，数据被写入到Filesystem Cache中后，其实就已经可以被打开了，但实际上，Filesystem Cache中要打开一个新的segment需要一个refresh操作，这个操作在es中默认是"),t("strong",[e._v("1秒钟")]),e._v("，这也是我们为什么说es是个近实时搜索引擎的原因。另外，数据写入到了Filesystem Cache中并不是已经结束了，数据还要进行持久化操作，在数据被写入到Filesystem Cache中后，经过一段时间或者外部触发，数据会执行fsync操作，对数据进行full commit写入到硬盘中。")]),e._v(" "),t("h1",{attrs:{id:"elasticsearch特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch特点","aria-hidden":"true"}},[e._v("#")]),e._v(" ElasticSearch特点")]),e._v(" "),t("ol",[t("li",[e._v("可以搭建大型集群，去处理PB级数据，服务于大型企业，同时也可以单机部署，服务于小型企业")]),e._v(" "),t("li",[e._v("集合了lucene的全文检索的特点，但又具有支持分布式技术，同时具有分析的能力，加上自身提供存储功能，部署简单，达到了真正开箱即用的便捷。")]),e._v(" "),t("li",[e._v("拥有传统数据库的存储能力，又在其基础上增强了查询能力，并提供各种分析，检索的能力，可以处理海量数据，提供了很多数据库所无法提供的功能")])])])},[],!1,null,null,null);s.default=c.exports}}]);