(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{272:function(t,a,e){"use strict";e.r(a);var i=e(38),h=Object(i.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"http2和http1有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http2和http1有什么区别","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP2和HTTP1有什么区别")]),t._v(" "),e("h2",{attrs:{id:"相对于http1-0，http1-1的优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相对于http1-0，http1-1的优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 相对于HTTP1.0，HTTP1.1的优化")]),t._v(" "),e("ul",[e("li",[t._v("缓存处理：多了Entity tag，If-Unmodified-Since, If-Match, If-None-Match等缓存信息（HTTTP1.0 If-Modified-Since,Expires）")]),t._v(" "),e("li",[t._v("带宽优化及网络连接的使用")]),t._v(" "),e("li",[t._v("错误通知的管理")]),t._v(" "),e("li",[t._v("Host头处理")]),t._v(" "),e("li",[t._v("长连接： HTTP1.1中默认开启Connection： keep-alive，一定程度上弥补了HTTP1.0每次请求都要创建连接的缺点。")])]),t._v(" "),e("h2",{attrs:{id:"相对于http1-1，http2的优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相对于http1-1，http2的优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 相对于HTTP1.1，HTTP2的优化")]),t._v(" "),e("ul",[e("li",[t._v("HTTP2支持二进制传送（实现方便且健壮），HTTP1.x是字符串传送")]),t._v(" "),e("li",[t._v("HTTP2支持多路复用")]),t._v(" "),e("li",[t._v("HTTP2采用HPACK压缩算法压缩头部，减小了传输的体积")]),t._v(" "),e("li",[t._v("HTTP2支持服务端推送")])]),t._v(" "),e("h2",{attrs:{id:"http2实现了多路复用-http1-x为什么不能多路复用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http2实现了多路复用-http1-x为什么不能多路复用","aria-hidden":"true"}},[t._v("#")]),t._v(" http2实现了多路复用,http1.x为什么不能多路复用?")]),t._v(" "),e("ul",[e("li",[t._v("HTTP/1.1是基于文本分割解析的协议,也没有序号,如果多路复用会导致顺序错乱,http2则用帧的方式,等于切成一块块,每一块都有对应的序号,所以可以实现多路复用.")])])])},[],!1,null,null,null);a.default=h.exports}}]);